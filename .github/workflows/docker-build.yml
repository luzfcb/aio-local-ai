name: Docker Build and Publish

on:
  workflow_dispatch:
    inputs:
      tagName:
        description: "Tag name"
        required: true
        default: 'v2'
      buildCPU:
        description: "Build and push CPU image"
        type: boolean
        required: true
        default: true
      buildGPU:
        description: "Build and push GPU image"
        type: boolean
        required: true
        default: true
        
jobs:
  push_cpu_image_to_registry:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.buildCPU == 'true' }}

    name: Build docker CPU image and push to dockerhub

    steps:
      - name: Release space from worker
        run: |
          echo "Listing top largest packages"
          pkgs=$(dpkg-query -Wf '${Installed-Size}\t${Package}\t${Status}\n' | awk '$NF == "installed"{print $1 "\t" $2}' | sort -nr)
          head -n 30 <<< "${pkgs}"
          echo
          df -h
          echo
          sudo apt-get remove -y '^llvm-.*|^libllvm.*' || true
          sudo apt-get remove --auto-remove android-sdk-platform-tools || true
          sudo apt-get purge --auto-remove android-sdk-platform-tools || true
          sudo rm -rf /usr/local/lib/android
          sudo apt-get remove -y '^dotnet-.*|^aspnetcore-.*' || true
          sudo rm -rf /usr/share/dotnet
          sudo apt-get remove -y '^mono-.*' || true
          sudo apt-get remove -y '^ghc-.*' || true
          sudo apt-get remove -y '.*jdk.*|.*jre.*' || true
          sudo apt-get remove -y 'php.*' || true
          sudo apt-get remove -y hhvm powershell firefox monodoc-manual msbuild || true
          sudo apt-get remove -y '^google-.*' || true
          sudo apt-get remove -y azure-cli || true
          sudo apt-get remove -y '^mongo.*-.*|^postgresql-.*|^mysql-.*|^mssql-.*' || true
          sudo apt-get remove -y '^gfortran-.*' || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          echo
          echo "Listing top largest packages"
          pkgs=$(dpkg-query -Wf '${Installed-Size}\t${Package}\t${Status}\n' | awk '$NF == "installed"{print $1 "\t" $2}' | sort -nr)
          head -n 30 <<< "${pkgs}"
          echo
          sudo rm -rfv build || true
          df -h

      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build container image
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          context: './'
          no-cache: true
          file: 'Dockerfile'
          tags: luzfcb/aio-local-ai:${{ github.event.inputs.tagName }}
          provenance: false

  push_gpu_image_to_registry:
    runs-on: ubuntu-22.04
    environment: "DockerHubAccess"
    if: ${{ github.event.inputs.buildGPU == 'true' }}

    name: Build docker GPU image and push to dockerhub

    steps:
      - name: Release space from worker
        run: |
          echo "Listing top largest packages"
          pkgs=$(dpkg-query -Wf '${Installed-Size}\t${Package}\t${Status}\n' | awk '$NF == "installed"{print $1 "\t" $2}' | sort -nr)
          head -n 30 <<< "${pkgs}"
          echo "Available storage before:"
          sudo df -h
          echo
          sudo apt-get remove -y '^llvm-.*|^libllvm.*' || true
          sudo apt-get remove --auto-remove android-sdk-platform-tools || true
          sudo apt-get purge --auto-remove android-sdk-platform-tools || true
          sudo rm -rf /usr/local/lib/android
          sudo apt-get purge -y '^dotnet-.*|^aspnetcore-.*' || true
          sudo apt-get purge -y '^temurin-.*|^ca-certificates-java.*' || true
          sudo apt-get purge -y '^libclang-.*' || true
          sudo rm -rf /usr/share/dotnet
          sudo apt-get purge -y '^mono-.*' || true
          sudo apt-get purge -y '^ghc-.*' || true
          sudo apt-get purge -y '.*jdk.*|.*jre.*' || true
          sudo apt-get purge -y 'php.*' || true
          sudo apt-get purge -y hhvm powershell firefox monodoc-manual msbuild || true
          sudo apt-get purge -y '^google-.*' || true
          sudo apt-get purge -y azure-cli || true
          sudo apt-get purge -y '^mongo.*-.*|^postgresql-.*|^mysql-.*|^mssql-.*' || true
          sudo apt-get purge -y '^gfortran-.*' || true
          sudo apt-get purge -y '^microsoft-edge-stable.*|^firefox.*|powershell.*' || true
          sudo apt-get autoremove -y
          sudo apt-get clean
          sudo rm -rf /usr/share/dotnet || true
          sudo rm -rf /opt/hostedtoolcache/CodeQL || true
          echo
          echo "Listing top largest packages"
          pkgs=$(dpkg-query -Wf '${Installed-Size}\t${Package}\t${Status}\n' | awk '$NF == "installed"{print $1 "\t" $2}' | sort -nr)
          head -n 30 <<< "${pkgs}"
          echo
          sudo rm -rfv build || true
          sudo docker system prune --all --volumes --force || true
          echo "Available storage after:"
          df -h

      - name: Available storage after
        run: df -h
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build container image
        uses: docker/build-push-action@v6
        with:
          push: false
          platforms: linux/amd64
          context: './'
          no-cache: true
          file: 'Dockerfile.cuda12'
          tags: luzfcb/aio-local-ai-cuda12:${{ github.event.inputs.tagName }}
          provenance: false

      - name: Push container image
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64
          context: './'
          no-cache: true
          file: 'Dockerfile.cuda12'
          tags: luzfcb/aio-local-ai-cuda12:${{ github.event.inputs.tagName }}
          provenance: false
